import 'package:flutter/material.dart';
import 'package:flutter_ecommerce/features/reviews/models/review.dart';

class AddReviewDialog extends StatefulWidget {
  final String productId;
  final Function(Review) onSubmit;

  const AddReviewDialog({
    super.key,
    required this.productId,
    required this.onSubmit,
  });

  @override
  State<AddReviewDialog> createState() => _AddReviewDialogState();
}

class _AddReviewDialogState extends State<AddReviewDialog> {
  final _commentController = TextEditingController();
  int _rating = 0;
  List<String> _selectedTags = [];

  final _availableTags = [
    'Quality',
    'Value',
    'Comfort',
    'Design',
    'Durability',
  ];

  @override
  Widget build(BuildContext context) {
    return Dialog(
      child: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          mainAxisSize: MainAxisSize.min,
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Write a Review',
              style: Theme.of(context).textTheme.titleLarge,
            ),
            const SizedBox(height: 16),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: List.generate(
                5,
                (index) => IconButton(
                  icon: Icon(
                    index < _rating ? Icons.star : Icons.star_border,
                    color: Colors.amber,
                  ),
                  onPressed: () => setState(() => _rating = index + 1),
                ),
              ),
            ),
            const SizedBox(height: 16),
            TextField(
              controller: _commentController,
              maxLines: 4,
              decoration: const InputDecoration(
                labelText: 'Your Review',
                hintText: 'Share your experience with this product...',
                border: OutlineInputBorder(),
              ),
            ),
            const SizedBox(height: 16),
            Text(
              'Tags',
              style: Theme.of(context).textTheme.titleMedium,
            ),
            Wrap(
              spacing: 8,
              children: _availableTags.map((tag) {
                final isSelected = _selectedTags.contains(tag);
                return FilterChip(
                  label: Text(tag),
                  selected: isSelected,
                  onSelected: (selected) {
                    setState(() {
                      if (selected) {
                        _selectedTags.add(tag);
                      } else {
                        _selectedTags.remove(tag);
                      }
                    });
                  },
                );
              }).toList(),
            ),
            const SizedBox(height: 24),
            Row(
              mainAxisAlignment: MainAxisAlignment.end,
              children: [
                TextButton(
                  onPressed: () => Navigator.pop(context),
                  child: const Text('Cancel'),
                ),
                const SizedBox(width: 8),
                FilledButton(
                  onPressed: _rating == 0 || _commentController.text.isEmpty
                      ? null
                      : () {
                          final review = Review(
                            id: '', // Will be generated by backend
                            productId: widget.productId,
                            userId: '', // Will be set by backend
                            userName: '', // Will be set by backend
                            rating: _rating,
                            comment: _commentController.text,
                            createdAt: DateTime.now(),
                            isVerifiedPurchase: false,
                            helpfulCount: 0,
                            tags: _selectedTags,
                          );
                          widget.onSubmit(review);
                          Navigator.pop(context);
                        },
                  child: const Text('Submit'),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }

  @override
  void dispose() {
    _commentController.dispose();
    super.dispose();
  }
}